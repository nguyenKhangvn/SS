services:
  - type: web
    name: ecommerce-api
    env: docker
    dockerfilePath: Ecommerce.API/Dockerfile
    ports:
      - 5000:8080 # Render sẽ tự động xử lý port 8080 bên trong container
    envVars:
      - key: ASPNETCORE_ENVIRONMENT
        value: Development # Hoặc Production tùy theo môi trường bạn muốn
      - key: ConnectionStrings__DefaultConnection
        value: "Host=ecommerce-db;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
    dependsOn:
      - ecommerce-db
      - migration-service

  - type: job
    name: migration-service
    env: docker
    dockerfilePath: Ecommerce.MigrationService/Dockerfile
    envVars:
      - key: ASPNETCORE_ENVIRONMENT
        value: Development # Hoặc Production tùy theo môi trường bạn muốn
      - key: ConnectionStrings__DefaultConnection
        value: "Host=ecommerce-db;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
    dependsOn:
      - ecommerce-db
    startCommand: dotnet run # Hoặc lệnh thực thi migration của bạn

  - type: postgres
    name: ecommerce-db
    image: postgres:16
    envVars:
      - key: POSTGRES_USER
        value: ${POSTGRES_USER}
      - key: POSTGRES_PASSWORD
        value: ${POSTGRES_PASSWORD}
      - key: POSTGRES_DB
        value: ${POSTGRES_DB}
